// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: check_refresh.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const checkRefresh = `-- name: CheckRefresh :one
select user_id from refresh_tokens where token = $1 and expires_at < NOW() and revoked_at is null
`

func (q *Queries) CheckRefresh(ctx context.Context, token string) (uuid.UUID, error) {
	row := q.db.QueryRowContext(ctx, checkRefresh, token)
	var user_id uuid.UUID
	err := row.Scan(&user_id)
	return user_id, err
}

const updateRevocation = `-- name: UpdateRevocation :exec
UPDATE refresh_tokens SET revoked_at = NOW(), updated_at = NOW() where token = $1
`

func (q *Queries) UpdateRevocation(ctx context.Context, token string) error {
	_, err := q.db.ExecContext(ctx, updateRevocation, token)
	return err
}
